#!/bin/bash
SIMRAPOSTPROC=$HOME/kode/IFEM/Apps/SIMRA-PostProc/r/bin/SIMRA-PostProc
SIMRASOLTRANSF=$HOME/kode/IFEM/Apps/SIMRA-PostProc/r/bin/SIMRA-SolutionTransfer
caseName=Sula
#caseName=SulaMetReg
caseName=met_new
#caseName=met
#caseName=ideal
#caseName=test
simraNesting=1
#simraNesting=""
simraresultsFolder=$HOME/results/simra/Sula
resultsFolder=$simraresultsFolder/$caseName
#withMPI=1
withMPI=0
mkdir -p $resultsFolder
originx=-200
originy=6899800
simrainfile="simra.in"
#nelu=260
#nelv=260
#nelw=50
zeta=0.1
zeta=0.05
#zeta=0.01
grading=1.116
res=600
#res=300
#res=150
nz=51
res=154
#res=308
#res=616
#res=1232
#nz=31
height=3888.51
topoRes="50m"
topoRes="10m"
PHI=315
U_A=28.284271247461902 # Yields u_x = 20 and u_y = -20 for PHI=315
NSTEP=8000
NSTEP=3000
#NSTEP=10
#NSTEP=1

for M in 1 # 1 # 1 2 3 # 0 1 2 3
do
    nref=1
    cp ../ic_bc_MPI.f90 ../ic_bc.f90 simra.in paraviewScript.py ../SIMRA_PostProc.xinp Sula-nest.xinp Sula-transfer*.xinp ../extract_yplusSurf.py convertBE.py $resultsFolder
    pushd $resultsFolder > /dev/null
    UREF=$(cat $simrainfile | grep -oP '(?<=UREF=)[+-]?[0-9]+([.][0-9]+)?+([e][+-][0-9]+)?')
    LENREF=$(cat $simrainfile | grep -oP '(?<=LENREF=)[+-]?[0-9]+([.][0-9]+)?+([e][+-][0-9]+)?')
    VIS=$(cat $simrainfile | grep -oP '(?<=VIS=)[+-]?[0-9]+([.][0-9]+)?+([e][+-][0-9]+)?')
    SED_VARIABLES="PHI U_A UREF LENREF VIS NSTEP"
    DICTS="simra.in ic_bc.f90 ic_bc_MPI.f90 paraviewScript.py SIMRA_PostProc.xinp"
    source $HOME/kode/bashScripts/sedFiles
    #siso -f dat mesh_converted.dat mesh.dat --in-coords local utm:33n --coords utm:33n
    if [ "$simraNesting" == 1 ] && ! [ "$M" == 0 ]
    then
        fileName=nest_M${M}
    else
        fileName=M${M}
    fi
    logsimra=${fileName}_simra.log
    logsimramesh=${fileName}_simramesh.log
    logIFEMmesh=${fileName}_IFEM.log
    if [[ $1 == 1 ]]
    then
        if [[ "$M" == 0 ]]
        then
            options=""
        elif [[ "$M" == 1 ]]
        then
            if [[ "$simraNesting" == 1 ]]
            then
                options="--cutu 0.07,0.55 --cutv 0.42,0.93"
                #nref=$((nref+1))
            else
                options="--refu 0.0,0.5 --refv 0.0,0.76"
                options="--refu 0.07,0.55 --refv 0.42,0.93"
            fi
        elif [[ "$M" == 2 ]]
        then
            if [[ "$simraNesting" == 1 ]]
            then
                options="--cutu 0.12,0.50 --cutv 0.47,0.88"
                nref=$((nref+2))
            else
                options="--refu 0.0,0.5,0.0,0.49 --refv 0.0,0.76,0.4,0.75"
                options="--refu 0.07,0.55,0.12,0.50 --refv 0.42,0.93,0.47,0.88"
            fi
        elif [[ "$M" == 3 ]]
        then
            if [[ "$simraNesting" == 1 ]]
            then
                options="--cutu 0.17,0.45 --cutv 0.52,0.83"
                nref=$((nref+3))
            else
                options="--refu 0.0,0.5,0.0,0.49,0.2,0.48 --refv 0.0,0.76,0.4,0.75,0.5,0.74"
                options="--refu 0.07,0.55,0.12,0.50,0.17,0.45 --refv 0.42,0.93,0.47,0.88,0.52,0.83"
            fi
        fi
        options="--nrefu $nref --nrefv $nref $options"
        pip3 install --user $HOME/kode/simramesh # make sure newest simremesh update is installed
        simramesh ../${filename}.g2 ${fileName}_3D.g2 --no-addpadding --no-puregeomdistr --nz $nz --height $height --res $res --grading $grading --zeta $zeta $options | tee $logsimramesh
        siso -f vts ${fileName}_3D.g2
        siso -f dat ${fileName}_3D.g2 mesh.dat
        #siso -f dat --out-endianness big ${fileName}_3D.g2 mesh_M${M}.dat
        #paraview ${fileName}_3D.vts & # View mesh (optional)
    fi
    noObsPoints=$(head -n 1 ../POINT_FILE | grep -oP '^[^0-9]*\K[0-9]+')
    if [[ $2 == 1 ]]
    then
        logsimra=${fileName}_simra.log
        rm $resultsFolder/yplus*.*
        if [[ $withMPI == 1 ]]
        then
            gfortran ic_bc_MPI.f90 -o ic_bc_MPI
            ./ic_bc_MPI simra.in
            #$HOME/kode/simra/build_mpi/bin/ibc1
            $HOME/kode/simra/build_mpi/bin/cppe1
            $HOME/kode/simra/build_mpi/bin/simra_mpi simra.in | tee $logsimra
        else
            #python3 convertBE.py
            #gfortran ic_bc.f90 -o ic_bc
            #./ic_bc simra.in
            if [ "$caseName" == "ideal" ]
            then
                if [[ "$M" == 0 ]]
                then
                    if [[ "$simraNesting" == 1 ]]
                    then
                        gfortran ic_bc.f90 -o ic_bc
                        ./ic_bc simra.in
                    else
                        cp M0/mesh.dat mesh.dat
                        cp M0/boun.dat bound.dat
                        cp M0/hist.res hist.res
                    fi
                else
                    $SIMRASOLTRANSF Sula-nest.xinp
                fi
            fi
            #$SIMRASOLTRANSF Sula-transfer_M0.xinp
            #$SIMRASOLTRANSF Sula-transfer.xinp
            $SIMRASOLTRANSF Sula-nest.xinp
            #siso -f vts init.dat
            ##$HOME/kode/simra/build/bin/simra simra.in | tee $logsimra
            ##$HOME/kode/simra/build_omp/bin/simra simra.in | tee $logsimra
            ##gdb $HOME/kode/simra/build_omp/bin/simra simra.in | tee $logsimra
            simra simra.in | tee $logsimra
        fi
        $SIMRAPOSTPROC SIMRA_PostProc.xinp -hdf5 ${fileName}.hdf5 | tee $logIFEM 
        siso -f pvd ${fileName}.hdf5 ${fileName}.pvd
        nelu=$(cat $logsimramesh | grep -oP '(?<=dir 0: )[+-]?[0-9]+([.][0-9]+)?')
        nelv=$(cat $logsimramesh | grep -oP '(?<=dir 1: )[+-]?[0-9]+([.][0-9]+)?')
        nelw=$(cat $logsimramesh | grep -oP '(?<=dir 2: )[+-]?[0-9]+([.][0-9]+)?')
        python3 extract_yplusSurf.py --resultsfolder $resultsFolder --nelu $nelu --nelv $nelv --nelw $nelw --nstep $NSTEP --savehist $NSTEP --pvdname $fileName 
        for ((pidx=1; pidx<=$noObsPoints; pidx++))
        do
            echo "ux,uy,uz,p,TKE" > "${fileName}_Point${pidx}.csv"
            cat $logsimra | gawk '($3 = /'\ $pidx':/) { print $6","$9","$12","$15","$18}' >> "${fileName}_Point${pidx}.csv"
        done
    fi
    if [[ $3 == 1 ]]
    then
        BRIDGE=2
        SED_VARIABLES="BRIDGE caseName fileName topoRes noObsPoints"
        DICTS="paraviewScript.py"
        source $HOME/kode/bashScripts/sedFiles
        paraview --script=paraviewScript.py &
        #/usr/lib/ParaView-5.8.1-osmesa-MPI-Linux-Python3.7-64bit/bin/pvbatch paraviewScript.py
        #$HOME/programs/paraview_build/bin/pvbatch paraviewScript.py
        #pvbatch paraviewScript.py &
    fi
    tar -cf ${fileName}.tar *.png *.log *.csv simra.in *.xinp ic_bc.f90 
    popd > /dev/null
done
