#!/bin/bash

SIMRAPOSTPROC=$HOME/kode/IFEM/Apps/SIMRA-PostProc/r/bin/SIMRA-PostProc
SIMRASOLTRANSF=$HOME/kode/IFEM/Apps/SIMRA-PostProc/r/bin/SIMRA-SolutionTransfer
caseName=Frankfurt
simraresultsFolder=$HOME/results/simra
resultsFolder=$simraresultsFolder/$caseName
wrfInputFile=$HOME/results/WRF/Frankfurt/2022122412/wrfout_d04_2022-12-24_12:00:00
#withMPI=1
withMPI=0
mkdir -p $resultsFolder
simrainfile="simra.in"
#nelu=260
#nelv=260
#nelw=50
zeta=0.1
zeta=0.05
#zeta=0.01
grading=1.116
res=600
#res=300
#res=150
nz=51
nref=0
#nz=31
height=4000
topoRes="25m"
PHI=135
U_A=20
NSTEP=3000
#NSTEP=1
for M in 0 # 0 1 2 3
do
    cp POINT_FILE Frankfurt-transfer.xinp ../ic_bc_MPI.f90 ../extract_yplusSurf.py ../ic_bc.f90 simra.in ../SIMRA_PostProc.xinp $resultsFolder
    pushd $resultsFolder > /dev/null
    UREF=$(cat $simrainfile | grep -oP '(?<=UREF=)[+-]?[0-9]+([.][0-9]+)?+([e][+-][0-9]+)?')
    LENREF=$(cat $simrainfile | grep -oP '(?<=LENREF=)[+-]?[0-9]+([.][0-9]+)?+([e][+-][0-9]+)?')
    VIS=$(cat $simrainfile | grep -oP '(?<=VIS=)[+-]?[0-9]+([.][0-9]+)?+([e][+-][0-9]+)?')
    SED_VARIABLES="PHI U_A UREF LENREF VIS NSTEP"
    DICTS="simra.in ic_bc.f90 ic_bc_MPI.f90 SIMRA_PostProc.xinp"
    source $HOME/kode/bashScripts/sedFiles
    #siso -f dat mesh_converted.dat mesh.dat --in-coords local utm:33n --coords utm:33n
    fileName=${caseName}_M${M}
    logsimra=${fileName}_simra.log
    logsimramesh=${fileName}_simramesh.log
    if [[ $1 == 1 ]]
    then
        options="--nrefu $nref --nrefv $nref $options"
        pip3 install --user $HOME/kode/simramesh # make sure newest simremesh update is installed
        simramesh ${caseName}${topoRes}.g2 ${fileName}_3D.g2 --no-addpadding --no-puregeomdistr --nz $nz --height $height --res $res --grading $grading --zeta $zeta $options | tee $logsimramesh
        siso -f vts ${fileName}_3D.g2
        siso -f dat ${fileName}_3D.g2 mesh.dat
        #paraview ${fileName}_3D.vts & # View mesh (optional)
    fi
    noObsPoints=$(head -n 1 POINT_FILE | grep -oP '^[^0-9]*\K[0-9]+')
    if [[ $2 == 1 ]]
    then
        #cp mesh_converted.dat mesh.dat
        logsimra=${fileName}_simra.log
        logIFEMmesh=${fileName}_IFEM.log
        #rm $resultsFolder/yplus*.*
        if [[ $withMPI == 1 ]]
        then
            gfortran ic_bc_MPI.f90 -o ic_bc_MPI
            ./ic_bc_MPI simra.in
            #$HOME/kode/simra/build_mpi/bin/ibc1
            $HOME/kode/simra/build_mpi/bin/cppe1
            $HOME/kode/simra/build_mpi/bin/simra_mpi simra.in | tee $logsimra
        else
            #gfortran ic_bc.f90 -o ic_bc
            #./ic_bc simra.in
            #python3 convertBE.py
            wrf2simra $wrfInputFile mesh.dat cont_wrf.res
            siso -f vts cont_wrf.res
            $SIMRASOLTRANSF Frankfurt-transfer.xinp -selfTransfer -fixup | tee $logIFEM 
            siso -f vts init.dat
            #$HOME/kode/simra/build/bin/simra simra.in | tee $logsimra
            #simra simra.in | tee $logsimra
        fi
        #$SIMRAPOSTPROC SIMRA_PostProc.xinp -hdf5 ${fileName}.hdf5 | tee $logIFEM 
        #siso -f pvd ${fileName}.hdf5 ${fileName}.pvd
        ##siso -f pvd cont.res ${fileName}.pvd
        #nelu=$(cat $logsimramesh | grep -oP '(?<=dir 0: )[+-]?[0-9]+([.][0-9]+)?')
        #nelv=$(cat $logsimramesh | grep -oP '(?<=dir 1: )[+-]?[0-9]+([.][0-9]+)?')
        #nelw=$(cat $logsimramesh | grep -oP '(?<=dir 2: )[+-]?[0-9]+([.][0-9]+)?')
        #python3 extract_yplusSurf.py --resultsfolder $resultsFolder --nelu $nelu --nelv $nelv --nelw $nelw --nstep $NSTEP --savehist $NSTEP --pvdname $fileName 
        #source $HOME/kode/simraStudies/extractLogData
    fi
    popd > /dev/null
done
